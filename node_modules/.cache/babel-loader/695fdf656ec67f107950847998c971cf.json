{"ast":null,"code":"var _jsxFileName = \"/Users/rahiemthompson/Desktop/Training/Projects/recipe-app/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./recipe\";\nimport style from \"./App.css\";\n\nconst App = () => {\n  const APP_ID = \"16461e2f\";\n  const APP_KEY = \"59aa56f15f181ad7fe969e446a84a60c\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\"); //Making an HTTP request and using Aync await to handle promises.\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  useEffect(() => {\n    console.log(\"Effect Ran\");\n    getRecipes();\n  }, [query]); //Leaving this empty allows useEffect to run only when the application mounts.\n  //But we want it to run each time there is a new query\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    className: style.app,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"../recipeapplogo.png\",\n    alt: \"Recipe app logo\",\n    height: \"300px\",\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"display-4 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Recipe sandbox\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Enter ingredient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary mr-4\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"search\"))), recipes.map(recipe => React.createElement(Recipe, {\n    key: recipe.recipe.label,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/rahiemthompson/Desktop/Training/Projects/recipe-app/src/App.js"],"names":["React","useEffect","useState","Recipe","style","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","getSearch","preventDefault","app","map","recipe","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./recipe\";\nimport style from \"./App.css\";\n\nconst App = () => {\n  const APP_ID = \"16461e2f\";\n  const APP_KEY = \"59aa56f15f181ad7fe969e446a84a60c\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  //Making an HTTP request and using Aync await to handle promises.\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  useEffect(() => {\n    console.log(\"Effect Ran\");\n    getRecipes();\n  }, [query]); //Leaving this empty allows useEffect to run only when the application mounts.\n  //But we want it to run each time there is a new query\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n    \n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"container\" className={style.app}>\n      <img\n        src=\"../recipeapplogo.png\"\n        alt=\"Recipe app logo\"\n        height=\"300px\"\n        width=\"300px\"\n      ></img>\n\n      <h1 className=\"display-4 mb-4\">Recipe sandbox</h1>\n\n      <hr />\n\n      <form onSubmit={getSearch} className=\"search-form\">\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={search}\n            onChange={updateSearch}\n            placeholder=\"Enter ingredient\"\n          ></input>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary mr-4\" type=\"submit\">\n            search\n          </button>\n        </div>\n      </form>\n\n      {recipes.map((recipe) => (\n        <Recipe\n          key={recipe.recipe.label}\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}